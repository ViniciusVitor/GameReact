{"ast":null,"code":"var _jsxFileName = \"/home/orube/projetos/react01/react01/src/jogo/Categoria.js\";\nimport React from 'react';\nimport { Grid, GridRow, GridColumn, Segment, Header, Icon } from 'semantic-ui-react';\nimport HeaderSubHeader from 'semantic-ui-react/dist/commonjs/elements/Header/HeaderSubheader';\nimport { Link } from 'react-router-dom';\n\nclass Categorias extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categorias: {}\n    };\n    config.syncState('categorias', {\n      context: this,\n      state: 'categorias',\n      asArray: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Navegacao, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Lista de Categorias\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Selecione a categoria que voc\\xEA quer responder perguntas\"), React.createElement(Grid, {\n      columns: 5,\n      divided: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, Object.keys(this.state.categorias).map(chave => {\n      return React.createElement(Categoria, {\n        key: chave,\n        titulo: this.state.categorias[chave].nome,\n        icone: this.state.categorias[chave].icone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default Categorias;","map":{"version":3,"sources":["/home/orube/projetos/react01/react01/src/jogo/Categoria.js"],"names":["React","Grid","GridRow","GridColumn","Segment","Header","Icon","HeaderSubHeader","Link","Categorias","Component","constructor","props","state","categorias","config","syncState","context","asArray","render","Object","keys","map","chave","nome","icone"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,OAAd,EAAuBC,UAAvB,EAAmCC,OAAnC,EAA4CC,MAA5C,EAAoDC,IAApD,QAA+D,mBAA/D;AACA,OAAOC,eAAP,MAA4B,iEAA5B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,MAAMC,UAAN,SAAyBC,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAIAC,IAAAA,MAAM,CAACC,SAAP,CAAiB,YAAjB,EAA+B;AAC3BC,MAAAA,OAAO,EAAE,IADkB;AAE3BJ,MAAAA,KAAK,EAAE,YAFoB;AAG3BK,MAAAA,OAAO,EAAE;AAHkB,KAA/B;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAHJ,EAKI,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAkB,MAAA,OAAO,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQC,MAAM,CAACC,IAAP,CAAY,KAAKR,KAAL,CAAWC,UAAvB,EACKQ,GADL,CACSC,KAAK,IAAI;AACV,aAAO,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,KAAhB;AAAuB,QAAA,MAAM,EAAE,KAAKV,KAAL,CAAWC,UAAX,CAAsBS,KAAtB,EAA6BC,IAA5D;AAAkE,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,UAAX,CAAsBS,KAAtB,EAA6BE,KAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAHL,CAFR,CALJ,CADJ;AAgBH;;AAhC8B;;AAmCnC,eAAehB,UAAf","sourcesContent":["import React from 'react'\nimport {Grid, GridRow, GridColumn, Segment, Header, Icon} from 'semantic-ui-react'\nimport HeaderSubHeader from 'semantic-ui-react/dist/commonjs/elements/Header/HeaderSubheader';\nimport {Link} from 'react-router-dom'\n\nclass Categorias extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            categorias: {}\n        }\n\n        config.syncState('categorias', {\n            context: this,\n            state: 'categorias',\n            asArray: false\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Navegacao />\n                <h1>Lista de Categorias</h1>\n                <p>Selecione a categoria que vocÃª quer responder perguntas</p>\n\n                <Grid columns={5} divided>\n                    {\n                        Object.keys(this.state.categorias)\n                            .map(chave => {\n                                return <Categoria key={chave} titulo={this.state.categorias[chave].nome} icone={this.state.categorias[chave].icone} />\n                            })\n                    }\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Categorias"]},"metadata":{},"sourceType":"module"}